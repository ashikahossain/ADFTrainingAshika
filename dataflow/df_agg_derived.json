{
	"name": "df_agg_derived",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Movies_DS1",
						"type": "DatasetReference"
					},
					"name": "MoviesV1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Movies2",
						"type": "DatasetReference"
					},
					"name": "MoviesClean",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "Movies_DS1",
						"type": "DatasetReference"
					},
					"name": "MoviesCountByYear",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "ExtractYearOutput"
				},
				{
					"name": "AvgRating"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesV1",
				"MoviesV1 derive(Year = toInteger(trim(right(title,6),'()')),",
				"          title = toString(left(title,length(title)-6))) ~> ExtractYearOutput",
				"ExtractYearOutput aggregate(groupBy(Year),",
				"     MoviesCount = count(Year)) ~> AvgRating",
				"ExtractYearOutput sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     partitionFileNames:['MoviesCountByYear'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'inputashika',",
				"     assertFailure_folderPath: 'errors',",
				"     partitionBy('hash', 1)) ~> MoviesClean",
				"AvgRating sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MoviesCountByYear"
			]
		}
	}
}